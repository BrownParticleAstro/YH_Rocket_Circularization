{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNj1bjdBfxZbNOJugSyVzbc"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["*Benjamin Bradley*\n","\n","**Date: April 10th, 2024**\n","\n","Summary of past work:\n","\n","[240323 Ben Bradley- Continuous Actor-Critic](https://colab.research.google.com/drive/1hoE1D94Aql8Z-Ri1mIkmCDzzWWYlF_Xh#scrollTo=h8DXUF_YKKCW)\n","\n","- Developed a Continuous state space environment and trained successful discrete action space and continuous action space Actor-Critic (PPO in the continuous case) models able to stably survive up to 100K steps.\n","- Observed learned differences in policy based on bounds allowed on x-dimension drift.\n","- Explained the mechanics of Actor-Critic, and even specific PPO, models.\n","- Began work on reinventing the wheel on a rocket_circularization environment which I will now use Yizhong's version of."],"metadata":{"id":"5g3NVli4DV3I"}},{"cell_type":"markdown","source":["### Outlining more the Continuous Actor-Critic Cartpole Learning"],"metadata":{"id":"ZS_V6jnaEUX1"}},{"cell_type":"code","source":["import os\n","import math\n","import time\n","import glob\n","import random\n","import numpy as np\n","import pandas as pd\n","\n","import gym\n","from gym import spaces, logger\n","from gym.utils import seeding\n","from gym.envs.classic_control import utils\n","from gym.error import DependencyNotInstalled\n","\n","import torch\n","import torch.nn as nn\n","import torch.optim as optim\n","import torch.nn.functional as F\n","from torch.distributions import MultivariateNormal\n","from torch.distributions import Categorical\n","\n","from datetime import datetime\n","from typing import Optional, Union\n","\n","from IPython.display import HTML\n","import matplotlib.pyplot as plt\n","import matplotlib.animation as animation\n","from matplotlib.patches import Rectangle\n","from matplotlib.patches import FancyArrowPatch"],"metadata":{"id":"8NortfaqDVnp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def add_arrow(frame, action):\n","    fig, ax = plt.subplots()\n","    ax.imshow(frame)\n","    ax.set_axis_off()\n","    arrow_props = dict(facecolor='black', edgecolor='black', arrowstyle='->', lw=3)\n","    if action < 0:  # Left\n","        ax.annotate('', xy=(0.8+(action[0]*0.25), 0.1), xytext=(0.8, 0.1), xycoords='axes fraction', arrowprops=arrow_props)\n","    if action > 0:  # Right\n","        ax.annotate('', xy=(0.8+(action[0]*0.25), 0.1), xytext=(0.8, 0.1), xycoords='axes fraction', arrowprops=arrow_props)\n","    fig.canvas.draw()\n","    frame_with_arrow = np.array(fig.canvas.renderer.buffer_rgba())\n","    plt.close(fig)\n","    return frame_with_arrow\n","\n","\n","# Include Action and Step count in animation\n","def update_scene(num, frames, actions, steps, patch, text):\n","    patch.set_data(frames[num])\n","    action_text = f'Action: {actions[num]}  Step: {steps[num]}'\n","    text.set_text(action_text)\n","\n","    return patch, text\n","\n","# Compile animation from frames and add update_scene() to frames\n","def plot_animation(frames, actions, steps, repeat=False, interval=40):\n","    frames = [add_arrow(frame, action) for frame, action in zip(frames, actions)]\n","    fig, ax = plt.subplots()\n","    patch = plt.imshow(frames[0])\n","    plt.axis('off')\n","    text = ax.text(0.05, 0.05, '', transform=ax.transAxes, color='white', fontsize=12, bbox=dict(facecolor='black', alpha=0.5))\n","    anim = animation.FuncAnimation(\n","        fig, update_scene, fargs=(frames, actions, steps, patch, text),\n","        frames=len(frames), repeat=repeat, interval=interval)\n","    plt.close()\n","    return anim"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M8Vv_NpKE7zX","executionInfo":{"status":"ok","timestamp":1712750075640,"user_tz":240,"elapsed":7,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"361932ac-c3d1-476f-a83e-d7b2dae3d61c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/ipykernel/ipkernel.py:283: DeprecationWarning: `should_run_async` will not call `transform_cell` automatically in the future. Please pass the result to `transformed_cell` argument and any exception that happen during thetransform in `preprocessing_exc_tuple` in IPython 7.17 and above.\n","  and should_run_async(code)\n"]}]},{"cell_type":"code","source":["class ContinuousCartPoleEnv(gym.Env):\n","    metadata = {\n","        'render.modes': ['human', 'rgb_array'],\n","        'video.frames_per_second': 50\n","    }\n","\n","    def __init__(self):\n","        self.gravity = 9.8\n","        self.masscart = 1.0\n","        self.masspole = 0.1\n","        self.total_mass = (self.masspole + self.masscart)\n","        self.length = 0.5  # actually half the pole's length\n","        self.polemass_length = (self.masspole * self.length)\n","        self.force_mag = 30.0\n","        self.tau = 0.02  # seconds between state updates\n","        self.min_action = -1.0\n","        self.max_action = 1.0\n","\n","        # Angle at which to fail the episode\n","        self.theta_threshold_radians = 12 * 2 * math.pi / 360\n","        self.x_threshold = 2.4\n","\n","        # Angle limit set to 2 * theta_threshold_radians so failing observation\n","        # is still within bounds\n","        high = np.array([\n","            self.x_threshold * 2,\n","            np.finfo(np.float32).max,\n","            self.theta_threshold_radians * 2,\n","            np.finfo(np.float32).max])\n","\n","        self.action_space = spaces.Box(\n","            low=self.min_action,\n","            high=self.max_action,\n","            shape=(1,)\n","        )\n","        self.observation_space = spaces.Box(-high, high)\n","\n","        self.seed()\n","        self.screen_width = 600\n","        self.screen_height = 400\n","        self.viewer = None\n","        self.screen = None\n","        self.clock = None\n","        self.state = None\n","\n","        self.steps_beyond_done = None\n","\n","    def seed(self, seed=None):\n","        self.np_random, seed = seeding.np_random(seed)\n","\n","        return [seed]\n","\n","    def stepPhysics(self, force):\n","        x, x_dot, theta, theta_dot = self.state\n","        costheta = math.cos(theta)\n","        sintheta = math.sin(theta)\n","        temp = (force + self.polemass_length * theta_dot * theta_dot * sintheta) / self.total_mass\n","        thetaacc = (self.gravity * sintheta - costheta * temp) / \\\n","            (self.length * (4.0/3.0 - self.masspole * costheta * costheta / self.total_mass))\n","        xacc = temp - self.polemass_length * thetaacc * costheta / self.total_mass\n","        x = x + self.tau * x_dot\n","        x_dot = x_dot + self.tau * xacc\n","        theta = theta + self.tau * theta_dot\n","        theta_dot = theta_dot + self.tau * thetaacc\n","        return (x, x_dot, theta, theta_dot)\n","\n","    def step(self, action):\n","        assert self.action_space.contains(action), \\\n","            \"%r (%s) invalid\" % (action, type(action))\n","        # Cast action to float to strip np trappings\n","        force = self.force_mag * float(action)\n","        self.state = self.stepPhysics(force)\n","        x, x_dot, theta, theta_dot = self.state\n","        done = x < -self.x_threshold \\\n","            or x > self.x_threshold \\\n","            or theta < -self.theta_threshold_radians \\\n","            or theta > self.theta_threshold_radians\n","        done = bool(done)\n","\n","        if not done:\n","            reward = 1.0\n","        elif self.steps_beyond_done is None:\n","            # Pole just fell!\n","            self.steps_beyond_done = 0\n","            reward = 1.0\n","        else:\n","            if self.steps_beyond_done == 0:\n","                logger.warn(\"\"\"\n","You are calling 'step()' even though this environment has already returned\n","done = True. You should always call 'reset()' once you receive 'done = True'\n","Any further steps are undefined behavior.\n","                \"\"\")\n","            self.steps_beyond_done += 1\n","            reward = 0.0\n","\n","        return np.array(self.state), reward, done, {}\n","\n","    def reset(self):\n","        self.state = self.np_random.uniform(low=-0.05, high=0.05, size=(4,))\n","        self.steps_beyond_done = None\n","        return np.array(self.state)\n","\n","    def render(self, render_mode=\"rgb_array\"):\n","        if render_mode is None:\n","            gym.logger.warn(\n","                \"You are calling render method without specifying any render mode. \"\n","                \"You can specify the render_mode at initialization, \"\n","                f'e.g. gym(\"{self.spec.id}\", render_mode=\"rgb_array\")'\n","            )\n","            return\n","\n","        try:\n","            import pygame\n","            from pygame import gfxdraw\n","        except ImportError:\n","            raise DependencyNotInstalled(\n","                \"pygame is not installed, run `pip install gym[classic_control]`\"\n","            )\n","\n","        if self.screen is None:\n","            pygame.init()\n","            if render_mode == \"human\":\n","                pygame.display.init()\n","                self.screen = pygame.display.set_mode(\n","                    (self.screen_width, self.screen_height)\n","                )\n","            else:  # mode == \"rgb_array\"\n","                self.screen = pygame.Surface((self.screen_width, self.screen_height))\n","        if self.clock is None:\n","            self.clock = pygame.time.Clock()\n","\n","        world_width = self.x_threshold * 2\n","        scale = self.screen_width / world_width\n","        polewidth = 10.0\n","        polelen = scale * (2 * self.length)\n","        cartwidth = 50.0\n","        cartheight = 30.0\n","\n","        if self.state is None:\n","            return None\n","\n","        x = self.state\n","\n","        self.surf = pygame.Surface((self.screen_width, self.screen_height))\n","        self.surf.fill((255, 255, 255))\n","\n","        l, r, t, b = -cartwidth / 2, cartwidth / 2, cartheight / 2, -cartheight / 2\n","        axleoffset = cartheight / 4.0\n","        cartx = x[0] * scale + self.screen_width / 2.0  # MIDDLE OF CART\n","        carty = 100  # TOP OF CART\n","        cart_coords = [(l, b), (l, t), (r, t), (r, b)]\n","        cart_coords = [(c[0] + cartx, c[1] + carty) for c in cart_coords]\n","        gfxdraw.aapolygon(self.surf, cart_coords, (0, 0, 0))\n","        gfxdraw.filled_polygon(self.surf, cart_coords, (0, 0, 0))\n","\n","        l, r, t, b = (\n","            -polewidth / 2,\n","            polewidth / 2,\n","            polelen - polewidth / 2,\n","            -polewidth / 2,\n","        )\n","\n","        pole_coords = []\n","        for coord in [(l, b), (l, t), (r, t), (r, b)]:\n","            coord = pygame.math.Vector2(coord).rotate_rad(-x[2])\n","            coord = (coord[0] + cartx, coord[1] + carty + axleoffset)\n","            pole_coords.append(coord)\n","        gfxdraw.aapolygon(self.surf, pole_coords, (202, 152, 101))\n","        gfxdraw.filled_polygon(self.surf, pole_coords, (202, 152, 101))\n","\n","        gfxdraw.aacircle(\n","            self.surf,\n","            int(cartx),\n","            int(carty + axleoffset),\n","            int(polewidth / 2),\n","            (129, 132, 203),\n","        )\n","        gfxdraw.filled_circle(\n","            self.surf,\n","            int(cartx),\n","            int(carty + axleoffset),\n","            int(polewidth / 2),\n","            (129, 132, 203),\n","        )\n","\n","        gfxdraw.hline(self.surf, 0, self.screen_width, carty, (0, 0, 0))\n","\n","        self.surf = pygame.transform.flip(self.surf, False, True)\n","        self.screen.blit(self.surf, (0, 0))\n","        if render_mode == \"human\":\n","            pygame.event.pump()\n","            self.clock.tick(self.metadata[\"render_fps\"])\n","            pygame.display.flip()\n","\n","        elif render_mode == \"rgb_array\":\n","            return np.transpose(\n","                np.array(pygame.surfarray.pixels3d(self.screen)), axes=(1, 0, 2)\n","            )\n","\n","    def close(self):\n","        if self.screen is not None:\n","            import pygame\n","\n","            pygame.display.quit()\n","            pygame.quit()\n","            self.isopen = False"],"metadata":{"id":"uUcysB8XFAb9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Memory to storing history of transitions\n","class ReplayBuffer:\n","    def __init__(self):\n","        self.actions = []\n","        self.states = []\n","        self.logprobs = []\n","        self.rewards = []\n","        self.state_values = []\n","        self.is_terminals = []\n","\n","    def clear(self):\n","        del self.actions[:]\n","        del self.states[:]\n","        del self.logprobs[:]\n","        del self.rewards[:]\n","        del self.state_values[:]\n","        del self.is_terminals[:]\n","\n","\n","# One model with the Actor *and* Critic networks bundled together\n","class ActorCritic(nn.Module):\n","    def __init__(self, state_dim, action_dim, hidden_dim, has_continuous_action_space, action_std_init):\n","        super(ActorCritic, self).__init__()\n","        # Works now for both continuous and discrete action states\n","        self.has_continuous_action_space = has_continuous_action_space\n","        if has_continuous_action_space:\n","            self.action_dim = action_dim\n","            self.action_var = torch.full((action_dim,), action_std_init * action_std_init)\n","\n","        # Actor\n","        if has_continuous_action_space :\n","            # Output range [-1, 1]\n","\n","            self.actor = nn.Sequential(\n","                            nn.Linear(state_dim, hidden_dim),\n","                            nn.ReLU(),\n","                            nn.Linear(4, action_dim),\n","                            nn.Tanh())\n","        else:\n","            # Output discrete n = action_dim actions\n","            self.actor = nn.Sequential(\n","                            nn.Linear(state_dim, hidden_dim),\n","                            nn.ReLU(),\n","                            nn.Linear(hidden_dim, action_dim),\n","                            nn.Softmax(dim=-1))\n","\n","        # Critic\n","        self.critic = nn.Sequential(\n","                        nn.Linear(state_dim, hidden_dim),\n","                        nn.ReLU(),\n","                        nn.Linear(hidden_dim, 1))\n","\n","\n","    def set_action_std(self, new_action_std):\n","        if self.has_continuous_action_space:\n","            self.action_var = torch.full((self.action_dim,), new_action_std * new_action_std)\n","        else:\n","          print(\"WARNING : Called ActorCritic::set_action_std() on discrete action space\")\n","\n","\n","    def act(self, state, min, max):\n","        if self.has_continuous_action_space:\n","            action_mean = self.actor(state) # mean of action predicted by actor\n","            cov_mat = torch.diag(self.action_var).unsqueeze(dim=0)\n","             # generate distribution to draw actions from based on learned uncertainty in action\n","            dist = MultivariateNormal(action_mean, cov_mat)\n","        else:\n","            action_probs = self.actor(state)\n","            dist = Categorical(action_probs)\n","\n","        action = dist.sample() # get action from distribution (adds randomness)\n","        action = torch.clamp(action, min, max)\n","        action_logprob = dist.log_prob(action) # get prob of the action which was drawn for adjusting actor weights\n","        state_val = self.critic(state) # expected critic network value of state for adjusting critic weights\n","\n","        return action.detach(), action_logprob.detach(), state_val.detach()\n","\n","\n","    def evaluate(self, state, action):\n","        if self.has_continuous_action_space:\n","            action_mean = self.actor(state)\n","            action_var = self.action_var.expand_as(action_mean)\n","            cov_mat = torch.diag_embed(action_var)\n","            dist = MultivariateNormal(action_mean, cov_mat)\n","            if self.action_dim == 1:\n","                action = action.reshape(-1, self.action_dim)\n","        else:\n","            action_probs = self.actor(state)\n","            dist = Categorical(action_probs)\n","\n","        action_logprobs = dist.log_prob(action)\n","        dist_entropy = dist.entropy()\n","        state_values = self.critic(state)\n","\n","        return action_logprobs, state_values, dist_entropy\n","\n","\n","class PPO:\n","    def __init__(self, state_dim, action_dim, hidden_dim, lr_actor, lr_critic, gamma, epochs, eps_clip, has_continuous_action_space, action_std_init=0.6):\n","        self.has_continuous_action_space = has_continuous_action_space\n","        if has_continuous_action_space:\n","            self.action_std = action_std_init\n","\n","        self.gamma = gamma # discount of past reward\n","        self.eps_clip = eps_clip # for clipping values to prevent math issues\n","        self.epochs = epochs\n","        self.memory = ReplayBuffer()\n","        self.policy = ActorCritic(state_dim, action_dim, hidden_dim, has_continuous_action_space, action_std_init)\n","        self.optimizer = torch.optim.Adam([\n","                        {'params': self.policy.actor.parameters(), 'lr': lr_actor, 'betas': (0.99, 0.99)},\n","                        {'params': self.policy.critic.parameters(), 'lr': lr_critic, 'betas': (0.99, 0.99)}\n","                    ])\n","        self.policy_old = ActorCritic(state_dim, action_dim, hidden_dim, has_continuous_action_space, action_std_init)\n","        self.policy_old.load_state_dict(self.policy.state_dict())\n","        self.MseLoss = nn.MSELoss()\n","\n","\n","    def set_action_std(self, new_action_std):\n","\n","        if self.has_continuous_action_space:\n","            self.action_std = new_action_std\n","            self.policy.set_action_std(new_action_std)\n","            self.policy_old.set_action_std(new_action_std)\n","        else:\n","            print(\"WARNING : Called PPO::set_action_std() on discrete action space\")\n","\n","\n","    def decay_action_std(self, action_std_decay_rate, min_action_std):\n","\n","        if self.has_continuous_action_space:\n","            self.action_std = self.action_std - action_std_decay_rate\n","            self.action_std = round(self.action_std, 4)\n","            if (self.action_std <= min_action_std):\n","                self.action_std = min_action_std\n","            self.set_action_std(self.action_std)\n","\n","        else:\n","            print(\"WARNING : Called PPO::decay_action_std() on discrete action space\")\n","\n","\n","    def select_action(self, state, min, max):\n","\n","        if self.has_continuous_action_space:\n","            with torch.no_grad():\n","                state = torch.FloatTensor(state)\n","                action, action_logprob, state_val = self.policy_old.act(state, min, max)\n","\n","            self.memory.states.append(state)\n","            self.memory.actions.append(action)\n","            self.memory.logprobs.append(action_logprob)\n","            self.memory.state_values.append(state_val)\n","\n","            return action.detach().cpu().numpy().flatten()\n","\n","        else:\n","            with torch.no_grad():\n","                state = torch.FloatTensor(state)\n","                action, action_logprob, state_val = self.policy_old.act(state, min, max)\n","\n","            self.memory.states.append(state)\n","            self.memory.actions.append(action)\n","            self.memory.logprobs.append(action_logprob)\n","            self.memory.state_values.append(state_val)\n","\n","            return action.item()\n","\n","\n","    def update(self):\n","        # Construct Discounted Sum of Rewards\n","        rewards = []\n","        discounted_reward = 0\n","        for reward, is_terminal in zip(reversed(self.memory.rewards), reversed(self.memory.is_terminals)):\n","            if is_terminal:\n","                discounted_reward = 0\n","            discounted_reward = reward + (self.gamma * discounted_reward)\n","            rewards.insert(0, discounted_reward)\n","\n","        # Normalizing Rewards\n","        rewards = torch.tensor(rewards, dtype=torch.float32)\n","        rewards = (rewards - rewards.mean()) / (rewards.std() + 1e-7)\n","\n","        # List -> Tensor\n","        old_states = torch.squeeze(torch.stack(self.memory.states, dim=0)).detach()\n","        old_actions = torch.squeeze(torch.stack(self.memory.actions, dim=0)).detach()\n","        old_logprobs = torch.squeeze(torch.stack(self.memory.logprobs, dim=0)).detach()\n","        old_state_values = torch.squeeze(torch.stack(self.memory.state_values, dim=0)).detach()\n","\n","        advantages = rewards.detach() - old_state_values.detach()\n","\n","        for _ in range(self.epochs):\n","\n","            # Evaluate old actions and values\n","            logprobs, state_values, dist_entropy = self.policy.evaluate(old_states, old_actions)\n","            state_values = torch.squeeze(state_values)\n","\n","            # Use PPO conservative weight adjustments\n","            ratios = torch.exp(logprobs - old_logprobs.detach())\n","            surr1 = ratios * advantages\n","            surr2 = torch.clamp(ratios, 1-self.eps_clip, 1+self.eps_clip) * advantages\n","            loss = -torch.min(surr1, surr2) + 0.5 * self.MseLoss(state_values, rewards) - 0.01 * dist_entropy\n","\n","            self.optimizer.zero_grad()\n","            loss.mean().backward()\n","            self.optimizer.step()\n","\n","        self.policy_old.load_state_dict(self.policy.state_dict())\n","        self.memory.clear()\n","\n","    def save(self, checkpoint_path):\n","        torch.save(self.policy_old.state_dict(), checkpoint_path)\n","\n","    def load(self, checkpoint_path):\n","        self.policy_old.load_state_dict(torch.load(checkpoint_path, map_location=lambda storage, loc: storage))\n","        self.policy.load_state_dict(torch.load(checkpoint_path, map_location=lambda storage, loc: storage))\n"],"metadata":{"id":"l7Z8DMzRFDLY","executionInfo":{"status":"ok","timestamp":1712754950456,"user_tz":240,"elapsed":142,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}}},"execution_count":55,"outputs":[]},{"cell_type":"code","source":["def moving_average(data, window_size):\n","    \"\"\"Calculate the moving average of the given list.\"\"\"\n","    i = 0\n","    moving_averages = []\n","\n","    while i < len(data) - window_size + 1:\n","        window_average = round(np.sum(data[\n","          i:i+window_size]) / window_size, 2)\n","        moving_averages.append(window_average)\n","        i += 1\n","\n","    return moving_averages"],"metadata":{"id":"Jn8xPNfeTdq_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["def train():\n","    print(\"============================================================================================\")\n","\n","    ####### setup #######\n","    has_continuous_action_space = True  # continuous action space; else discrete\n","    max_ep_len = 20_000                 # max timesteps in one episode\n","    max_training_timesteps = 2_000_000  # break training loop if timeteps > max_training_timesteps\n","    print_freq = max_ep_len * 5         # how often (in timesteps) to print avg reward\n","    log_freq = max_ep_len * 5           # how often (in timesteps) to print log avg reward\n","    save_model_freq = max_ep_len * 15   # how often (in timesteps) to save model\n","    update_timestep = max_ep_len        # how often (in timesteps) to update policy\n","\n","    epochs = 80                         # how many (in epochs) to run on updating PPO\n","    eps_clip = 0.2                      # parameter for value clipping\n","\n","    action_std = 0.6                    # starting std for action distribution (Multivariate Normal)\n","    action_std_decay_rate = 0.05        # action_std = action_std - action_std_decay_rate\n","    min_action_std = 0.1                # minimum action_std\n","    action_std_decay_freq = 250_000     # how often (in timesteps) to decay action_std\n","    gamma = 0.99                        # discount factor for considering past summed rewards in value of current state\n","    lr_actor = 5e-4                     # lr for actor\n","    lr_critic = 5e-4                    # lr for critic\n","    hidden_dim = 4\n","\n","    random_seed = 0                     # seed (can be set to random number, currently set to 0)\n","\n","    env_name = \"CartPole-Continuous-v1\" # env name to save model under\n","    print(\"training environment name : \" + env_name)\n","\n","    # env = gym.make(env_name)          # <- If using regular Cartpole and not custom env\n","    env = ContinuousCartPoleEnv()       # <- Using Custom Env\n","\n","    high = np.array([\n","          1,\n","          np.finfo(np.float32).max,\n","          12 * 2 * math.pi / 360,\n","          np.finfo(np.float32).max\n","        ], dtype=np.float32)\n","    env.observation_space = spaces.Box(-high, high, dtype=np.float32)\n","    env._max_episode_steps = max_ep_len\n","    env.x_threshold = 1.0\n","    env.seed()\n","\n","    state_dim = env.observation_space.shape[0] # state dimension\n","    if has_continuous_action_space:            # action dimension\n","        action_dim = env.action_space.shape[0]\n","    else:\n","        action_dim = env.action_space.n\n","\n","\n","    ####### logging #######\n","    # don't overwrite old log files\n","    log_dir = \"PPO_logs\"\n","    if not os.path.exists(log_dir):\n","          os.makedirs(log_dir)\n","    log_dir = log_dir + '/' + env_name + '/'\n","    if not os.path.exists(log_dir):\n","          os.makedirs(log_dir)\n","\n","    # num of log files in log directory\n","    run_num = 0\n","    current_num_files = next(os.walk(log_dir))[2]\n","    run_num = len(current_num_files)\n","\n","    # new log file for current run\n","    log_f_name = log_dir + '/PPO_' + env_name + \"_log_\" + str(run_num) + \".csv\"\n","    print(\"current logging run number for \" + env_name + \" : \", run_num)\n","    print(\"logging at : \" + log_f_name)\n","\n","\n","    ####### checkpointing #######\n","    # don't overwrite old weights\n","    run_num_pretrained = 0\n","\n","    directory = \"PPO_preTrained\"\n","    if not os.path.exists(directory):\n","          os.makedirs(directory)\n","    directory = directory + '/' + env_name + '/'\n","    if not os.path.exists(directory):\n","          os.makedirs(directory)\n","\n","    checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","    print(\"save checkpoint path : \" + checkpoint_path)\n","\n","    if random_seed:\n","        torch.manual_seed(random_seed)\n","        env.seed(random_seed)\n","        np.random.seed(random_seed)\n","\n","    ####### training procedure #######\n","    ppo_agent = PPO(state_dim, action_dim, hidden_dim, lr_actor, lr_critic, gamma, epochs, eps_clip, has_continuous_action_space, action_std)\n","    start_time = datetime.now().replace(microsecond=0)\n","\n","    print(\"Started training at (GMT) : \", start_time)\n","    print(\"============================================================================================\")\n","\n","    # log episode, timestep, reward throughout trainking\n","    log_f = open(log_f_name,\"w+\")\n","    log_f.write('episode,timestep,reward\\n')\n","    print_running_reward = 0\n","    print_running_episodes = 0\n","    log_running_reward = 0\n","    log_running_episodes = 0\n","\n","    # training loop\n","\n","    rewards = []\n","\n","    time_step = 0\n","    i_episode = 0\n","    while time_step <= max_training_timesteps:\n","        state = env.reset()\n","        env.seed()\n","        # env.state[0] = random.uniform(-0.5, 0.5)\n","\n","        current_ep_reward = 0\n","        for t in range(1, max_ep_len+1):\n","            print(f\"\\rStep: {t}\", end=\"\")\n","\n","            # select action\n","            action = ppo_agent.select_action(state, env.min_action, env.max_action)\n","            state, reward, done, _ = env.step(action)\n","\n","            # register new step\n","            ppo_agent.memory.rewards.append(reward)\n","            ppo_agent.memory.is_terminals.append(done)\n","            time_step +=1\n","            current_ep_reward += reward\n","\n","            print_avg_reward = print_running_reward / print_running_episodes if print_running_episodes != 0 else 0\n","            print_avg_reward = round(print_avg_reward, 2)\n","\n","            # update PPO agent\n","            if time_step % update_timestep == 0:\n","                ppo_agent.update()\n","\n","            # decay action_std when necessary\n","            if has_continuous_action_space and time_step % action_std_decay_freq == 0:\n","                ppo_agent.decay_action_std(action_std_decay_rate, min_action_std)\n","\n","            # log in logging file\n","            if time_step % log_freq == 0:\n","                log_avg_reward = log_running_reward / log_running_episodes\n","                log_avg_reward = round(log_avg_reward, 4)\n","                log_f.write('{},{},{}\\n'.format(i_episode, time_step, log_avg_reward))\n","                log_f.flush()\n","                log_running_reward = 0\n","                log_running_episodes = 0\n","\n","            # print avg reward\n","            if time_step % print_freq == 0:\n","                print(\"\\tEpisode : {} \\t\\t Timestep : {} \\t\\t Average Reward : {}\".format(i_episode, time_step, print_avg_reward))\n","                print_running_reward = 0\n","                print_running_episodes = 0\n","\n","            # save weights\n","            if time_step % save_model_freq == 0 and print_avg_reward == max_ep_len:\n","                print(\"--------------------------------------------------------------------------------------------\")\n","                print(\"saving model at : \" + checkpoint_path)\n","                ppo_agent.save(checkpoint_path)\n","                time_step = max_training_timesteps\n","                print(\"model saved\")\n","                print(\"Elapsed Time  : \", datetime.now().replace(microsecond=0) - start_time)\n","                print(\"--------------------------------------------------------------------------------------------\")\n","\n","            if done:\n","                rewards.append(current_ep_reward)\n","                break\n","\n","        print_running_reward += current_ep_reward\n","        print_running_episodes += 1\n","        log_running_reward += current_ep_reward\n","        log_running_episodes += 1\n","        i_episode += 1\n","\n","    log_f.close()\n","    env.close()\n","\n","    # print total training time\n","    print(\"============================================================================================\")\n","    end_time = datetime.now().replace(microsecond=0)\n","    print(\"Finished training at (GMT) : \", end_time)\n","    print(\"Total training time  : \", end_time - start_time)\n","    print(\"============================================================================================\")\n","\n","    return rewards\n","\n","rewards = train()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cz4_yyHcF3Ml","outputId":"1dfcba2a-ee73-471c-9a12-e2d32eec4fcd","executionInfo":{"status":"ok","timestamp":1712723786659,"user_tz":240,"elapsed":1662525,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================================================\n","training environment name : CartPole-Continuous-v1\n","current logging run number for CartPole-Continuous-v1 :  0\n","logging at : PPO_logs/CartPole-Continuous-v1//PPO_CartPole-Continuous-v1_log_0.csv\n","save checkpoint path : PPO_preTrained/CartPole-Continuous-v1/PPO_CartPole-Continuous-v1_0_0.pth\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/gym/spaces/box.py:128: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n","  logger.warn(f\"Box bound precision lowered by casting to {self.dtype}\")\n"]},{"output_type":"stream","name":"stdout","text":["Started training at (GMT) :  2024-04-10 04:08:50\n","============================================================================================\n","\rStep: 1\rStep: 2\rStep: 3\rStep: 4\rStep: 5\rStep: 6\rStep: 7\rStep: 8\rStep: 9"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-3-af619897a7df>:71: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n","  force = self.force_mag * float(action)\n"]},{"output_type":"stream","name":"stdout","text":["Step: 5\tEpisode : 5745 \t\t Timestep : 100000 \t\t Average Reward : 17.41\n","Step: 96\tEpisode : 8164 \t\t Timestep : 200000 \t\t Average Reward : 41.3\n","Step: 205\tEpisode : 9104 \t\t Timestep : 300000 \t\t Average Reward : 106.27\n","Step: 235\tEpisode : 9541 \t\t Timestep : 400000 \t\t Average Reward : 228.76\n","Step: 64\tEpisode : 9746 \t\t Timestep : 500000 \t\t Average Reward : 488.64\n","Step: 4343\tEpisode : 9806 \t\t Timestep : 600000 \t\t Average Reward : 1595.35\n","Step: 1871\tEpisode : 9829 \t\t Timestep : 700000 \t\t Average Reward : 4455.3\n","Step: 11995\tEpisode : 9836 \t\t Timestep : 800000 \t\t Average Reward : 12839.43\n","Step: 11995\tEpisode : 9841 \t\t Timestep : 900000 \t\t Average Reward : 20000.0\n","--------------------------------------------------------------------------------------------\n","saving model at : PPO_preTrained/CartPole-Continuous-v1/PPO_CartPole-Continuous-v1_0_0.pth\n","model saved\n","Elapsed Time  :  0:27:35\n","--------------------------------------------------------------------------------------------\n","Step: 12737============================================================================================\n","Finished training at (GMT) :  2024-04-10 04:36:26\n","Total training time  :  0:27:36\n","============================================================================================\n"]}]},{"cell_type":"code","source":["print(\"============================================================================================\")\n","\n","\n","#################################### Testing ###################################\n","\n","\n","####### hyperparameters #######\n","\n","env_name = \"CartPole-Continuous-v1\"\n","has_continuous_action_space = True\n","max_ep_len = 100_000\n","action_std = 0.1            # None if not continuous\n","\n","total_test_episodes = 10    # total num of testing episodes\n","epochs = 80                 # update policy for K epochs\n","eps_clip = 0.2              # clip parameter for PPO\n","gamma = 0.99                # discount factor\n","lr_actor = 5e-4             # learning rate for actor\n","lr_critic = 5e-4            # learning rate for critic\n","hidden_dim = 4\n","\n","# env = gym.make(env_name)\n","env = ContinuousCartPoleEnv()# <- Using Custom Env\n","\n","high = np.array([\n","      1,\n","      np.finfo(np.float32).max,\n","      12 * 2 * math.pi / 360,\n","      np.finfo(np.float32).max\n","    ], dtype=np.float32)\n","env.observation_space = spaces.Box(-high, high, dtype=np.float32)\n","env._max_episode_steps = max_ep_len\n","env.x_threshold = 1.0\n","\n","state_dim = env.observation_space.shape[0]\n","if has_continuous_action_space:\n","    action_dim = env.action_space.shape[0]\n","else:\n","    action_dim = env.action_space.n\n","\n","\n","# initialize a PPO agent\n","ppo_agent = PPO(state_dim, action_dim, hidden_dim, lr_actor, lr_critic, gamma, epochs, eps_clip, has_continuous_action_space, action_std)\n","\n","\n","# preTrained weights directory\n","\n","random_seed = 0             #### load checkpoint trained on random seed\n","run_num_pretrained = 0      #### load checkpoint num\n","\n","directory = \"PPO_preTrained\" + '/' + env_name + '/'\n","checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","ppo_agent.load(checkpoint_path)\n","\n","print(\"loading network from : \" + checkpoint_path)\n","print(\"--------------------------------------------------------------------------------------------\")\n","\n","\n","test_running_reward = 0\n","for ep in range(1, total_test_episodes+1):\n","    ep_reward = 0\n","    state = env.reset()\n","    for t in range(1, max_ep_len+1):\n","        print(f\"\\rStep: {t}\", end=\"\")\n","\n","        action = ppo_agent.select_action(state, env.min_action, env.max_action)\n","        state, reward, done, _ = env.step(action)\n","        ep_reward += reward\n","        if done:\n","            break\n","\n","    ppo_agent.memory.clear() # clear memory\n","\n","    test_running_reward +=  ep_reward\n","    print('\\tEpisode: {} \\t\\t Reward: {}'.format(ep, round(ep_reward, 2)))\n","    ep_reward = 0\n","\n","env.close()\n","\n","\n","print(\"============================================================================================\")\n","avg_test_reward = test_running_reward / total_test_episodes\n","avg_test_reward = round(avg_test_reward, 2)\n","print(\"average test reward : \" + str(avg_test_reward))\n","print(\"============================================================================================\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PaiZOC5nP-ng","executionInfo":{"status":"ok","timestamp":1712725937664,"user_tz":240,"elapsed":1865284,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"19cb8522-d941-4c3d-978b-253df33c27f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["============================================================================================\n","loading network from : PPO_preTrained/CartPole-Continuous-v1/PPO_CartPole-Continuous-v1_0_0.pth\n","--------------------------------------------------------------------------------------------\n","\rStep: 1\rStep: 2\rStep: 3\rStep: 4\rStep: 5\rStep: 6\rStep: 7\rStep: 8\rStep: 9\rStep: 10\rStep: 11\rStep: 12\rStep: 13\rStep: 14\rStep: 15\rStep: 16\rStep: 17\rStep: 18\rStep: 19\rStep: 20\rStep: 21\rStep: 22\rStep: 23\rStep: 24\rStep: 25\rStep: 26\rStep: 27\rStep: 28\rStep: 29\rStep: 30\rStep: 31\rStep: 32\rStep: 33\rStep: 34\rStep: 35\rStep: 36\rStep: 37\rStep: 38\rStep: 39\rStep: 40\rStep: 41\rStep: 42\rStep: 43\rStep: 44\rStep: 45\rStep: 46\rStep: 47\rStep: 48\rStep: 49\rStep: 50\rStep: 51\rStep: 52\rStep: 53\rStep: 54\rStep: 55\rStep: 56\rStep: 57\rStep: 58\rStep: 59\rStep: 60\rStep: 61\rStep: 62\rStep: 63\rStep: 64\rStep: 65\rStep: 66\rStep: 67\rStep: 68\rStep: 69\rStep: 70\rStep: 71\rStep: 72\rStep: 73\rStep: 74\rStep: 75\rStep: 76\rStep: 77\rStep: 78\rStep: 79\rStep: 80\rStep: 81\rStep: 82\rStep: 83\rStep: 84\rStep: 85\rStep: 86\rStep: 87\rStep: 88\rStep: 89\rStep: 90\rStep: 91\rStep: 92\rStep: 93\rStep: 94\rStep: 95\rStep: 96\rStep: 97\rStep: 98\rStep: 99\rStep: 100\rStep: 101\rStep: 102\rStep: 103\rStep: 104\rStep: 105\rStep: 106\rStep: 107\rStep: 108\rStep: 109\rStep: 110\rStep: 111\rStep: 112\rStep: 113\rStep: 114\rStep: 115\rStep: 116\rStep: 117\rStep: 118\rStep: 119\rStep: 120\rStep: 121\rStep: 122\rStep: 123\rStep: 124"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/gym/spaces/box.py:128: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n","  logger.warn(f\"Box bound precision lowered by casting to {self.dtype}\")\n","<ipython-input-3-af619897a7df>:71: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n","  force = self.force_mag * float(action)\n"]},{"output_type":"stream","name":"stdout","text":["Step: 100000\tEpisode: 1 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 2 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 3 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 4 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 5 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 6 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 7 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 8 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 9 \t\t Reward: 100000.0\n","Step: 100000\tEpisode: 10 \t\t Reward: 100000.0\n","============================================================================================\n","average test reward : 100000.0\n","============================================================================================\n"]}]},{"cell_type":"code","source":["# Now, plot the results\n","period = 100\n","avg_rew = moving_average(rewards, 100)\n","\n","plt.plot(np.arange(len(avg_rew)), avg_rew, label=f'LINLIN-- Moving avg steps survived over past {period} episodes')\n","plt.xlabel(f'Episodes into training')\n","plt.ylabel(f'Average steps survived')\n","plt.title('Moving average of Model survival time over training')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"id":"UJSE_bxSF5aE","colab":{"base_uri":"https://localhost:8080/","height":472},"executionInfo":{"status":"ok","timestamp":1712726030708,"user_tz":240,"elapsed":1326,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"ef4b302f-dce6-47fc-ffc8-ac523a616a0f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(np.arange(len(avg_rew)), avg_rew, label=f'LOGLIN-- Moving avg steps survived over past {period} episodes')\n","plt.xlabel(f'Episodes into training')\n","plt.ylabel(f'Log Average steps survived')\n","plt.yscale(\"log\")\n","plt.title('Moving average of Model survival time over training')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"VKDeiohLNOx0","executionInfo":{"status":"ok","timestamp":1712726032139,"user_tz":240,"elapsed":1432,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"11d9132e-407f-42c8-8ac1-2e2f2274b535"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(np.arange(len(avg_rew)), avg_rew, label=f'LOGLOG-- Moving avg steps survived over past {period} episodes')\n","plt.xlabel(f'Log Episodes into training')\n","plt.xscale(\"log\")\n","plt.ylabel(f'Log Average Steps survived')\n","plt.yscale(\"log\")\n","plt.title('Moving average of Model survival time over training')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":476},"id":"irEzesozNP6B","executionInfo":{"status":"ok","timestamp":1712726104232,"user_tz":240,"elapsed":1645,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"e661c276-7a25-42ee-a687-ac5c5585b3c6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(\"============================================================================================\")\n","\n","# Model trained on x-range [-1, 1]\n","def oneRun_PosChart_plus_Animation(max_steps, pos_period, frames_period):\n","\n","    plt.rc('animation', html='jshtml')\n","\n","    high = np.array([\n","      1,\n","      np.finfo(np.float32).max,\n","      12 * 2 * math.pi / 360,\n","      np.finfo(np.float32).max\n","    ], dtype=np.float32)\n","    env.observation_space = spaces.Box(-high, high, dtype=np.float32)\n","    env.x_threshold = 1.0\n","    env_name = \"CartPole-Continuous-v1\"\n","    has_continuous_action_space = True\n","\n","    state_dim = env.observation_space.shape[0]\n","    if has_continuous_action_space:\n","        action_dim = env.action_space.shape[0]\n","    else:\n","        action_dim = env.action_space.n\n","\n","    action_std = 0.1            # None if not continuous\n","    epochs = 80                 # update policy for K epochs\n","    eps_clip = 0.2              # clip parameter for PPO\n","    gamma = 0.99                # discount factor\n","    lr_actor = 5e-4             # learning rate for actor\n","    lr_critic = 5e-4            # learning rate for critic\n","    hidden_dim = 4\n","\n","    ppo_agent = PPO(state_dim, action_dim, hidden_dim, lr_actor, lr_critic, gamma, epochs, eps_clip, has_continuous_action_space, action_std)\n","\n","    random_seed = 0\n","    run_num_pretrained = 0\n","    directory = \"PPO_preTrained\" + '/' + env_name + '/'\n","    checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","    ppo_agent.load(checkpoint_path)\n","\n","    env._max_episode_steps = max_steps\n","    env.seed()\n","\n","    xs = []\n","    x_dots = []\n","    thetas = []\n","    theta_dots = []\n","    frames = []\n","    actions = []\n","    steps = []\n","\n","    state = env.reset()\n","    print(f\"Initial State: {state}\")\n","    ep_reward = 0\n","    for step in range(1, max_steps+1):\n","        print(f\"\\rStep: {step}\", end=\"\")\n","        if step % frames_period == 0:\n","            img = env.render()\n","            frames.append(img)\n","\n","        steps.append(step)\n","\n","        if step % pos_period == 0:\n","            xs.append(state[0])\n","            x_dots.append(state[1])\n","            thetas.append(state[2])\n","            theta_dots.append(state[3])\n","\n","\n","        action = ppo_agent.select_action(state, env.min_action, env.max_action)\n","        state, reward, done, _ = env.step(action)\n","        ep_reward += reward\n","\n","        actions.append(action)\n","        if done:\n","            break\n","\n","    print('Reward: {}\\n'.format(round(ep_reward, 2)))\n","\n","    env.close()\n","    fig, axs = plt.subplots(2, 2, figsize=(10, 10))\n","\n","    axs[0, 0].plot(xs)\n","    axs[0, 0].set_xlabel(f'Periods of {pos_period} steps into epsiode')\n","    axs[0, 0].set_ylabel('x coordinate')\n","\n","    axs[0, 1].plot(x_dots, 'tab:orange')\n","    axs[0, 1].set_xlabel(f'Periods of {pos_period} steps into epsiode')\n","    axs[0, 1].set_ylabel('x_dot coordinate')\n","\n","    axs[1, 0].plot(thetas, 'tab:green')\n","    axs[1, 0].set_xlabel(f'Periods of {pos_period} steps into epsiode')\n","    axs[1, 0].set_ylabel('theta coordinate')\n","\n","    axs[1, 1].plot(theta_dots, 'tab:red')\n","    axs[1, 1].set_xlabel(f'Periods of {pos_period} steps into epsiode')\n","    axs[1, 1].set_ylabel('theta_dot coordinate')\n","\n","    plt.tight_layout()\n","    plt.show()\n","    return frames, actions, steps\n","\n","env = ContinuousCartPoleEnv()\n","max_steps = 10_000\n","pos_period = 25\n","frames_period = 10\n","\n","frames, actions, steps = oneRun_PosChart_plus_Animation(max_steps, pos_period, frames_period)\n","plot_animation(frames, actions, steps)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"output_embedded_package_id":"1KW8PMYse3kT7XZi5_jfUD0QgIeIs42G6"},"id":"PD5tWOMScFt6","executionInfo":{"status":"ok","timestamp":1712731333476,"user_tz":240,"elapsed":191358,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"b6975a45-09ef-40e3-c512-b5ce87cdc5d6"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["avg_action = moving_average(actions, 50)\n","plt.plot(np.arange(len(avg_action)), avg_action, label=f'Actions over time')\n","plt.xlabel(f'Steps into episode')\n","plt.ylabel(f'Action taken')\n","plt.title('Action chosen over time through one episode')\n","plt.legend()\n","plt.grid(True)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"pSglLv6CoXkQ","executionInfo":{"status":"ok","timestamp":1712731333477,"user_tz":240,"elapsed":34,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"1807076a-85b9-48c8-ad3e-01c671bdfda5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.rc('animation', html='jshtml')\n","env = ContinuousCartPoleEnv()\n","env_name = \"CartPole-Continuous-v1\"\n","\n","ppo_agent = PPO(env.observation_space.shape[0], env.action_space.shape[0], 4, 0.0003, 0.001, 0.99, 80, 0.2, True, 0.1)\n","\n","random_seed = 0\n","run_num_pretrained = 0\n","directory = \"PPO_preTrained\" + '/' + env_name + '/'\n","checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","ppo_agent.load(checkpoint_path)\n","\n","env._max_episode_steps = 20_000\n","n_episodes = 15\n","pos_period = 25\n","\n","# Initialize lists to hold aggregated results from all episodes\n","all_xs = [[] for _ in range(n_episodes)]\n","\n","for episode in range(n_episodes):\n","    done = False\n","    steps = 0\n","    state = env.reset()\n","    env.seed()\n","\n","    while not done:\n","        steps += 1\n","        print(f\"\\rStep: {steps}\", end=\"\")\n","        action = ppo_agent.select_action(state, env.min_action, env.max_action)\n","        state, _, done, _ = env.step(action)\n","\n","        if steps % pos_period == 0:\n","            all_xs[episode].append(state[0])\n","\n","        if done or steps == env._max_episode_steps:\n","            print(f\"\\tEpisode {episode + 1}: \\tTime taken = {steps}\")\n","            break\n","\n","env.close()\n","\n","# Loop through each episode to plot its data\n","for episode in range(n_episodes):\n","    plt.plot(np.arange(len(all_xs[episode])), all_xs[episode], label=f'Episode {episode + 1}')\n","\n","# Setting labels and legends\n","plt.xlabel(f'Periods of {pos_period} steps into epsiode')\n","plt.ylabel('X coordinate')\n","\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":837},"id":"LRbXLXgsc2WK","executionInfo":{"status":"ok","timestamp":1712727346424,"user_tz":240,"elapsed":555989,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"db86fdca-d339-464c-fe93-7ac5bc2c2ab0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/gym/spaces/box.py:128: UserWarning: \u001b[33mWARN: Box bound precision lowered by casting to float32\u001b[0m\n","  logger.warn(f\"Box bound precision lowered by casting to {self.dtype}\")\n","<ipython-input-3-af619897a7df>:71: DeprecationWarning: Conversion of an array with ndim > 0 to a scalar is deprecated, and will error in future. Ensure you extract a single element from your array before performing this operation. (Deprecated NumPy 1.25.)\n","  force = self.force_mag * float(action)\n"]},{"output_type":"stream","name":"stdout","text":["Step: 20000\tEpisode 1: \tTime taken = 20000\n","Step: 20000\tEpisode 2: \tTime taken = 20000\n","Step: 20000\tEpisode 3: \tTime taken = 20000\n","Step: 20000\tEpisode 4: \tTime taken = 20000\n","Step: 20000\tEpisode 5: \tTime taken = 20000\n","Step: 20000\tEpisode 6: \tTime taken = 20000\n","Step: 20000\tEpisode 7: \tTime taken = 20000\n","Step: 20000\tEpisode 8: \tTime taken = 20000\n","Step: 20000\tEpisode 9: \tTime taken = 20000\n","Step: 20000\tEpisode 10: \tTime taken = 20000\n","Step: 20000\tEpisode 11: \tTime taken = 20000\n","Step: 20000\tEpisode 12: \tTime taken = 20000\n","Step: 20000\tEpisode 13: \tTime taken = 20000\n","Step: 20000\tEpisode 14: \tTime taken = 20000\n","Step: 20000\tEpisode 15: \tTime taken = 20000\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["def load_actor_model():\n","    model = PPO(env.observation_space.shape[0], env.action_space.shape[0], 4, 0.0003, 0.001, 0.99, 80, 0.2, True, 0.1)\n","\n","    env_name = \"CartPole-Continuous-v1\"\n","    random_seed = 0\n","    run_num_pretrained = 0\n","    directory = \"PPO_preTrained\" + '/' + env_name + '/'\n","    checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","    model.load(checkpoint_path)\n","    return model\n","\n","model = load_actor_model()\n","\n","def visualize_action_output(x_range, theta_range, resolution=100):\n","    x_values = np.linspace(x_range[0], x_range[1], resolution)\n","    theta_values = np.linspace(theta_range[0], theta_range[1], resolution)\n","    action_outputs = np.zeros((resolution, resolution))\n","\n","    for i, x in enumerate(x_values):\n","        for j, theta in enumerate(theta_values):\n","            state = torch.tensor([[x, 0, theta, 0]], dtype=torch.float)\n","            with torch.no_grad():\n","                action = model.select_action(state, env.min_action, env.max_action)\n","            action_outputs[j, i] = action[0]\n","\n","    plt.figure(figsize=(10, 6))\n","    X, Y = np.meshgrid(x_values, theta_values)\n","    plt.contourf(X, Y, action_outputs, 20, cmap='RdYlBu')\n","    plt.colorbar()\n","    plt.xlabel('Cart Position (x)')\n","    plt.ylabel('Pole Angle (theta)')\n","    plt.title('Action Output Visualization')\n","    plt.show()\n","\n","# X, Theta Action Space\n","visualize_action_output(x_range=(-10, 10), theta_range=(-10, 10))\n","\n","def visualize_action_output(x_dot_range, theta_dot_range, resolution=100):\n","    x_dot_range = np.linspace(x_dot_range[0], x_dot_range[1], resolution)\n","    theta_dot_range = np.linspace(theta_dot_range[0], theta_dot_range[1], resolution)\n","    action_outputs = np.zeros((resolution, resolution))\n","\n","    for i, x_dot in enumerate(x_dot_range):\n","        for j, theta_dot in enumerate(theta_dot_range):\n","            state = torch.tensor([[0, x_dot, 0, theta_dot]], dtype=torch.float)\n","            with torch.no_grad():\n","                action = model.select_action(state, env.min_action, env.max_action)\n","            action_outputs[j, i] = action[0]\n","\n","    plt.figure(figsize=(10, 6))\n","    X, Y = np.meshgrid(x_dot_range, theta_dot_range)\n","    plt.contourf(X, Y, action_outputs, 20, cmap='RdYlBu')\n","    plt.colorbar()\n","    plt.xlabel('Delta Cart Position (x dot)')\n","    plt.ylabel('Delta Pole Angle (theta dot)')\n","    plt.title('Action Output Visualization')\n","    plt.show()\n","\n","# X_dot, Theta_dot Action Space\n","visualize_action_output(x_dot_range=(-10, 10), theta_dot_range=(-10, 10))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"2WgeX5OQc7HN","executionInfo":{"status":"ok","timestamp":1712727364663,"user_tz":240,"elapsed":18243,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"d4281e46-9863-4d16-987f-fd0fe1b79082"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Rocket Circularization"],"metadata":{"id":"sKDvss89JS_c"}},{"cell_type":"code","source":["!git clone https://github.com/YizhongHu/rocket_circularization\n","!cp -r rocket_circularization/* ./"],"metadata":{"id":"R9qtDedYJU5m","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1712751513270,"user_tz":240,"elapsed":863,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"outputId":"53d88d1c-f3c2-4e41-cd55-38e7d108f05d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["fatal: destination path 'rocket_circularization' already exists and is not an empty directory.\n"]}]},{"cell_type":"code","source":["import rocket_gym\n","from radial_rocket import RadialBalance, DiscretiseAction"],"metadata":{"id":"8Av1VixfJVeW","executionInfo":{"status":"ok","timestamp":1712753867334,"user_tz":240,"elapsed":267,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"9411390a-f548-450b-a7fa-fb554914880b"},"execution_count":40,"outputs":[{"output_type":"stream","name":"stderr","text":["/content/radial_rocket.py:121: DeprecationWarning: invalid escape sequence '\\d'\n","  ax1.plot(time, record[:, 1], label='$\\dot{r}$')\n"]}]},{"cell_type":"code","source":["####### setup #######\n","has_continuous_action_space = True  # continuous action space; else discrete\n","max_ep_len = 20_000                 # max timesteps in one episode\n","max_training_timesteps = 2_000_000  # break training loop if timeteps > max_training_timesteps\n","print_freq = max_ep_len * 5         # how often (in timesteps) to print avg reward\n","log_freq = max_ep_len * 5           # how often (in timesteps) to print log avg reward\n","save_model_freq = max_ep_len * 15   # how often (in timesteps) to save model\n","update_timestep = max_ep_len        # how often (in timesteps) to update policy\n","\n","epochs = 80                         # how many (in epochs) to run on updating PPO\n","eps_clip = 0.2                      # parameter for value clipping\n","\n","action_std = 0.6                    # starting std for action distribution (Multivariate Normal)\n","action_std_decay_rate = 0.05        # action_std = action_std - action_std_decay_rate\n","min_action_std = 0.1                # minimum action_std\n","action_std_decay_freq = 250_000     # how often (in timesteps) to decay action_std\n","gamma = 0.99                        # discount factor for considering past summed rewards in value of current state\n","lr_actor = 5e-4                     # lr for actor\n","lr_critic = 5e-4                    # lr for critic\n","hidden_dim = 4\n","\n","random_seed = 0\n","env_name = 'RocketCircularization-v1'\n","\n","env = rocket_gym.make('RocketCircularization-v1')\n","print(env)\n","\n","####### logging #######\n","# don't overwrite old log files\n","log_dir = \"PPO_logs\"\n","if not os.path.exists(log_dir):\n","      os.makedirs(log_dir)\n","log_dir = log_dir + '/' + env_name + '/'\n","if not os.path.exists(log_dir):\n","      os.makedirs(log_dir)\n","\n","# num of log files in log directory\n","run_num = 0\n","current_num_files = next(os.walk(log_dir))[2]\n","run_num = len(current_num_files)\n","\n","# new log file for current run\n","log_f_name = log_dir + '/PPO_' + env_name + \"_log_\" + str(run_num) + \".csv\"\n","print(\"current logging run number for \" + env_name + \" : \", run_num)\n","print(\"logging at : \" + log_f_name)\n","\n","\n","####### checkpointing #######\n","# don't overwrite old weights\n","run_num_pretrained = 0\n","\n","directory = \"PPO_preTrained\"\n","if not os.path.exists(directory):\n","      os.makedirs(directory)\n","directory = directory + '/' + env_name + '/'\n","if not os.path.exists(directory):\n","      os.makedirs(directory)\n","\n","checkpoint_path = directory + \"PPO_{}_{}_{}.pth\".format(env_name, random_seed, run_num_pretrained)\n","print(\"save checkpoint path : \" + checkpoint_path)\n","\n","if random_seed:\n","    torch.manual_seed(random_seed)\n","    env.seed(random_seed)\n","    np.random.seed(random_seed)\n","\n","####### training procedure #######\n","state_dim = 4\n","action_dim = 2\n","ppo_agent = PPO(state_dim, action_dim, hidden_dim, lr_actor, lr_critic, gamma, epochs, eps_clip, has_continuous_action_space, action_std)\n","start_time = datetime.now().replace(microsecond=0)\n","\n","print(\"Started training at (GMT) : \", start_time)\n","print(\"============================================================================================\")\n","\n","# log episode, timestep, reward throughout trainking\n","log_f = open(log_f_name,\"w+\")\n","log_f.write('episode,timestep,reward\\n')\n","print_running_reward = 0\n","print_running_episodes = 0\n","log_running_reward = 0\n","log_running_episodes = 0\n","\n","rewards = []\n","time_step = 0\n","i_episode = 0\n","while time_step <= max_training_timesteps:\n","  current_ep_reward = 0\n","  obs = env.reset()\n","  env.seed()\n","\n","  done = False\n","  for t in range(1, max_ep_len+1):\n","    print(f\"\\rStep: {t}:\\t{time_step % print_freq}/{print_freq} \\tRunning Reward: {print_running_reward}\", end=\"\")\n","    action = ppo_agent.select_action(obs, -10, 10)\n","\n","    obs, _, done, truncate, info = env.step(action)\n","    if truncate: done = True\n","    ppo_agent.memory.rewards.append(1)\n","    ppo_agent.memory.is_terminals.append(done)\n","    time_step +=1\n","    current_ep_reward += 1\n","\n","    print_avg_reward = print_running_reward / print_running_episodes if print_running_episodes != 0 else 0\n","    print_avg_reward = round(print_avg_reward, 2)\n","\n","    # update PPO agent\n","    if time_step % update_timestep == 0:\n","        ppo_agent.update()\n","\n","    # decay action_std when necessary\n","    if has_continuous_action_space and time_step % action_std_decay_freq == 0:\n","        ppo_agent.decay_action_std(action_std_decay_rate, min_action_std)\n","\n","    # log in logging file\n","    if time_step % log_freq == 0:\n","        log_avg_reward = log_running_reward / log_running_episodes\n","        log_avg_reward = round(log_avg_reward, 4)\n","        log_f.write('{},{},{}\\n'.format(i_episode, time_step, log_avg_reward))\n","        log_f.flush()\n","        log_running_reward = 0\n","        log_running_episodes = 0\n","\n","    # print avg reward\n","    if time_step % print_freq == 0:\n","        print(\"\\tEpisode : {} \\t\\t Timestep : {} \\t\\t Average Reward : {}\".format(i_episode, time_step, print_avg_reward))\n","        print_running_reward = 0\n","        print_running_episodes = 0\n","\n","    # save weights\n","    if time_step % save_model_freq == 0 and print_avg_reward == max_ep_len:\n","        print(\"--------------------------------------------------------------------------------------------\")\n","        print(\"saving model at : \" + checkpoint_path)\n","        ppo_agent.save(checkpoint_path)\n","        time_step = max_training_timesteps\n","        print(\"model saved\")\n","        print(\"Elapsed Time  : \", datetime.now().replace(microsecond=0) - start_time)\n","        print(\"--------------------------------------------------------------------------------------------\")\n","\n","    if done:\n","        rewards.append(current_ep_reward)\n","        break\n","\n","  print_running_reward += current_ep_reward\n","  print_running_episodes += 1\n","  log_running_reward += current_ep_reward\n","  log_running_episodes += 1\n","  i_episode += 1\n","\n","log_f.close()\n","env.close()\n","\n","# print total training time\n","print(\"============================================================================================\")\n","end_time = datetime.now().replace(microsecond=0)\n","print(\"Finished training at (GMT) : \", end_time)\n","print(\"Total training time  : \", end_time - start_time)\n","print(\"============================================================================================\")\n","\n"],"metadata":{"id":"yXiSTEKIJdZe","colab":{"base_uri":"https://localhost:8080/","height":720},"outputId":"6c5d838e-db2f-42eb-b1cd-a77eadafbfb1","executionInfo":{"status":"error","timestamp":1712759703045,"user_tz":240,"elapsed":2861638,"user":{"displayName":"Benjamin Bradley","userId":"04603304923366878970"}}},"execution_count":75,"outputs":[{"output_type":"stream","name":"stdout","text":["<RocketEnv instance>\n","current logging run number for RocketCircularization-v1 :  5\n","logging at : PPO_logs/RocketCircularization-v1//PPO_RocketCircularization-v1_log_5.csv\n","save checkpoint path : PPO_preTrained/RocketCircularization-v1/PPO_RocketCircularization-v1_0_0.pth\n","Started training at (GMT) :  2024-04-10 13:47:21\n","============================================================================================\n","Step: 44:\t99999/100000 \tRunning Reward: 99956\tEpisode : 1100 \t\t Timestep : 100000 \t\t Average Reward : 90.87\n","Step: 27:\t99999/100000 \tRunning Reward: 100017\tEpisode : 2050 \t\t Timestep : 200000 \t\t Average Reward : 105.28\n","Step: 179:\t99999/100000 \tRunning Reward: 99848\tEpisode : 2833 \t\t Timestep : 300000 \t\t Average Reward : 127.52\n","Step: 65:\t99999/100000 \tRunning Reward: 100114\tEpisode : 3439 \t\t Timestep : 400000 \t\t Average Reward : 165.2\n","Step: 349:\t99999/100000 \tRunning Reward: 99716\tEpisode : 3982 \t\t Timestep : 500000 \t\t Average Reward : 183.64\n","Step: 393:\t99999/100000 \tRunning Reward: 99956\tEpisode : 4526 \t\t Timestep : 600000 \t\t Average Reward : 183.74\n","Step: 240:\t99999/100000 \tRunning Reward: 100153\tEpisode : 5058 \t\t Timestep : 700000 \t\t Average Reward : 188.26\n","Step: 157:\t99999/100000 \tRunning Reward: 100083\tEpisode : 5580 \t\t Timestep : 800000 \t\t Average Reward : 191.73\n","Step: 95:\t99999/100000 \tRunning Reward: 100062\tEpisode : 6092 \t\t Timestep : 900000 \t\t Average Reward : 195.43\n","Step: 65:\t99999/100000 \tRunning Reward: 100030\tEpisode : 6629 \t\t Timestep : 1000000 \t\t Average Reward : 186.28\n","Step: 12:\t99999/100000 \tRunning Reward: 100053\tEpisode : 7161 \t\t Timestep : 1100000 \t\t Average Reward : 188.07\n","Step: 259:\t99999/100000 \tRunning Reward: 99753\tEpisode : 7714 \t\t Timestep : 1200000 \t\t Average Reward : 180.39\n","Step: 143:\t99999/100000 \tRunning Reward: 100116\tEpisode : 8219 \t\t Timestep : 1300000 \t\t Average Reward : 198.25\n","Step: 275:\t99999/100000 \tRunning Reward: 99868\tEpisode : 8721 \t\t Timestep : 1400000 \t\t Average Reward : 198.94\n","Step: 68:\t8837/100000 \tRunning Reward: 9045"]},{"output_type":"error","ename":"KeyboardInterrupt","evalue":"","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-75-5ec35afee4b4>\u001b[0m in \u001b[0;36m<cell line: 87>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     93\u001b[0m   \u001b[0;32mfor\u001b[0m \u001b[0mt\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax_ep_len\u001b[0m\u001b[0;34m+\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     94\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"\\rStep: {t}:\\t{time_step % print_freq}/{print_freq} \\tRunning Reward: {print_running_reward}\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mend\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 95\u001b[0;31m     \u001b[0maction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mppo_agent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_action\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mobs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m-\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     96\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     97\u001b[0m     \u001b[0mobs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrwd\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdone\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtruncate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minfo\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0menv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstep\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maction\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-55-f9900ac33df4>\u001b[0m in \u001b[0;36mselect_action\u001b[0;34m(self, state, min, max)\u001b[0m\n\u001b[1;32m    144\u001b[0m             \u001b[0;32mwith\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mno_grad\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    145\u001b[0m                 \u001b[0mstate\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mFloatTensor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 146\u001b[0;31m                 \u001b[0maction\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maction_logprob\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstate_val\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpolicy_old\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mact\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstate\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    147\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    148\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmemory\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstates\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstate\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-55-f9900ac33df4>\u001b[0m in \u001b[0;36mact\u001b[0;34m(self, state, min, max)\u001b[0m\n\u001b[1;32m     72\u001b[0m         \u001b[0maction\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtorch\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclamp\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maction\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmin\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmax\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     73\u001b[0m         \u001b[0maction_logprob\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdist\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlog_prob\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maction\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# get prob of the action which was drawn for adjusting actor weights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 74\u001b[0;31m         \u001b[0mstate_val\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcritic\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mstate\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m# expected critic network value of state for adjusting critic weights\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     75\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     76\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0maction\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdetach\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maction_logprob\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdetach\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstate_val\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdetach\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/container.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    215\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    216\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mmodule\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 217\u001b[0;31m             \u001b[0minput\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodule\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    218\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_wrapped_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1509\u001b[0m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_compiled_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# type: ignore[misc]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1510\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1511\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1512\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1513\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_call_impl\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py\u001b[0m in \u001b[0;36m_call_impl\u001b[0;34m(self, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1518\u001b[0m                 \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_pre_hooks\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0m_global_backward_hooks\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1519\u001b[0m                 or _global_forward_hooks or _global_forward_pre_hooks):\n\u001b[0;32m-> 1520\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mforward_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1521\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1522\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/torch/nn/modules/linear.py\u001b[0m in \u001b[0;36mforward\u001b[0;34m(self, input)\u001b[0m\n\u001b[1;32m    114\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    115\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mforward\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mTensor\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 116\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mF\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlinear\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minput\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mweight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbias\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    117\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    118\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mextra_repr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m->\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyboardInterrupt\u001b[0m: "]}]}]}